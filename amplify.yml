version: 1
backend:
  phases:
    preBuild:
      commands:
        - nvm install 20
        - nvm use 20
        - node --version
        - npm --version
    build:
      commands:
        - export AMPLIFY_LOG_LEVEL=debug
        - npm install --legacy-peer-deps --cache .npm --prefer-offline
        # Install dependencies for Lambda functions
        - cd amplify/functions/chat-orchestrator && npm install --legacy-peer-deps
        - cd ../../..
        # Verify Lambda function dependencies are installed
        - ls -la amplify/functions/chat-orchestrator/node_modules/openai
        - cd amplify/functions/chat-orchestrator && npm list openai
        - cd ../../..
        # Deploy or update the backend stack that matches the current branch
        - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID
frontend:
  phases:
    preBuild:
      commands:
        - nvm install 20
        - nvm use 20
        - node --version
        - npm --version
        - npm install --legacy-peer-deps --cache .npm --prefer-offline
    build:
      commands:
        - npm run build
  artifacts:
    baseDirectory: dist
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - .npm/**/* 